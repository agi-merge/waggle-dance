# see env.mjs for additional schema information

# Optional: Type of agent chat memory to use. Can be one of "buffer", "conversation", "vector"
# MEMORY_TYPE=

# Required: URL for NextAuth
NEXTAUTH_URL=http://localhost:3000
# Required: Secret for NextAuth. Can be generated via 'openssl rand -base64 32' on Unix.
NEXTAUTH_SECRET=""

# Optional: ID and Secret for Discord OAuth provider
# DISCORD_ID=
# DISCORD_SECRET=

# Optional: ID and Secret for GitHub OAuth provider
# GITHUB_ID=
# GITHUB_SECRET=

# Optional: Token and email for Postmark email service
# POSTMARK_TOKEN=
# EMAIL_FROM="waggledance <noreply@waggledance.ai>"

# Required: API key for OpenAI. Must be paid tier. GPT-4 access is highly recommended.
OPENAI_API_KEY=
# Optional: Organization ID for OpenAI, overrides "Default organization" found at https://platform.openai.com/account/api-keys
# OPENAI_ORGANIZATION_ID=

# Optional: routes all requests through Azure OpenAI.
# see: https://js.langchain.com/docs/modules/model_io/models/llms/integrations/azure
# The names here are as referred to the same names as in the Azure OpenAI Studio UI.
# Finer-tuned control is coming
# AZURE_OPENAI_API_KEY=
# AZURE_OPENAI_INSTANCE_NAME=
# AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME=
# # Warning: whatever model deployment you use here will override the model instances in the UI
# # You may use models like gpt-4-32k
# AZURE_OPENAI_DEPLOYMENT_NAME=
# AZURE_OPENAI_API_VERSION=2023-08-01-preview
# # You do not normally need to set this
# AZURE_OPENAI_BASE_PATH=

# Optional: API for https://www.searchapi.io (Google Search, News, Scholar, YT Transcripts) skill. If this is provided, SerpAPI will not be used.
# SEARCHAPI_API_KEY=
# Optional: API key for SerpAPI (Google Search) skill. If SEARCHAPI_API_KEY is provided, this will not be used.
# SERPAPI_API_KEY=

# Optional: App ID for Wolfram Alpha skill
# WOLFRAM_APP_ID=

# Required: Host, API key, and scheme for Weaviate.
# This is the current long-term memory store, and document store.
WEAVIATE_HOST=
WEAVIATE_API_KEY=
WEAVIATE_SCHEME=https

# Required: Helps isolate vector storage and retrieval. Generate with `openssl rand -base64 32`.
VECTOR_NAMESPACE_SALT=

# Required: Name of the long-term memory index. Must start with a capital letter, e.g. LTM.
LONG_TERM_MEMORY_INDEX_NAME=

# Optional: Version of the app. Used for displaying version in the UI.
NEXT_PUBLIC_APP_VERSION=$npm_package_version

# Optional: Discord invite URL. Used in the Footer and elsewhere.
NEXT_PUBLIC_DISCORD_INVITE_URL=https://discord.gg/ttt9YmhQU6


# Required: URL, API URL, API token, and read-only API token for Vercel KV
KV_URL=
KV_REST_API_URL=
KV_REST_API_TOKEN=
KV_REST_API_READ_ONLY_TOKEN=

# Required: We use Prisma, but for now only Postgres is tested and verified as working.
POSTGRES_PRISMA_URL=
POSTGRES_URL_NON_POOLING=

# Optional: Enable verbose logging for LangChain
# NEXT_PUBLIC_LANGCHAIN_VERBOSE=false

# Optional: Override the default basePath URL for LangChain (applies to OpenAI, may conflict w/ Azure)
# NEXT_PUBLIC_LANGCHAIN_API_URL=

# Optional: LangSmith
# LANGCHAIN_TRACING_V2=
# LANGCHAIN_ENDPOINT=
# LANGCHAIN_API_KEY=
# LANGCHAIN_PROJECT=

# Optional: Edge config; used for showing alerts (and more in the future)
# see: https://vercel.com/docs/storage/edge-config/get-started
# EDGE_CONFIG=

# Optional: Toggles the execution agent trajectory evaluation feature for the results of agent runs
# see: https://js.langchain.com/docs/guides/evaluation/trajectory/
# EXE_TRAJECTORY_EVALUATION=false